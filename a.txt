func handleTransfer(sess *discordgo.Session, inter *discordgo.InteractionCreate) {
	sender, targetUser, err := getInterSenderAndTargetUser(inter)

	if err != nil {
		respond(sess, inter, err.Error(), nil, false)
		return
	}

	if sender.ID == targetUser.ID {
		respond(sess, inter, "You can't transfer money to yourself!!!", nil, false)
		return
	}

	options := inter.ApplicationCommandData().Options
	amount := 0

	for _, option := range options {
		if option.Name == "amount" {
			amount = (int)(option.Value.(float64))
			break
		}
	}

	if amount <= 0 {
		respond(sess, inter, "Transfer amount must be positive!!!", nil, false)
		return
	}

	tx, err := DB.Begin()

	if err != nil {
		log.Printf("Failed to begin transaction in /transfer: %v", err)
		respond(sess, inter, "Failed to start transfer :<", nil, false)

		return
	}

	defer tx.Rollback()

	res, err := tx.Exec(
		`
        UPDATE balances 
        SET balance = balance - ? 
        WHERE user_id = ? AND balance >= ?
        `,
		amount, sender.ID, amount)

	if err != nil {
		log.Printf("Deduction error in /transfer: %v", err)
		respond(sess, inter, "Failed to deduct from your account :<", nil, false)

		return
	}

	// i think it will return error if database driver doesnt support RowsAffected
	// so i dont do check
	rowsAffected, _ := res.RowsAffected()

	if rowsAffected == 0 {
		respond(sess, inter, "You don't have enough money for this transfer!!!", nil, false)
		return
	}

	_, err = tx.Exec(
		`
        INSERT INTO balances(user_id, balance) 
        VALUES(?, ?) 
        ON CONFLICT(user_id) DO UPDATE SET 
            balance = balance + ?
        `,
		targetUser.ID, amount, amount)

	if err != nil {
		log.Printf("Add balance error in /transfer: %v", err)
		respond(sess, inter, "Failed to add money to recipient :<", nil, false)

		return
	}

	if err := tx.Commit(); err != nil {
		log.Printf("Commit error in /transfer: %v", err)
		respond(sess, inter, "Transfer failed during finalization :<", nil, false)

		return
	}

	response := fmt.Sprintf("%s transferred %d money to %s!", sender.Mention(), amount, targetUser.Mention())
	respond(sess, inter, response, nil, true)
}
